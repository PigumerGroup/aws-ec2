AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  InstanceType:
    Type: String
    Default: t2.micro
  ImageId:
    Type: String
  KeyName:
    Type: String
  RpmBucket:
    Type: String
  RpmKey:
    Type: String
  RpmName:
    Type: String
Resources:
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - 's3:*'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource: '*'
        PolicyName: snp-ec2-policy
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref EC2Role
  EC2Instances:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: !Ref InstanceProfile
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      UserData:
        Fn::Base64:
          Fn::Sub: |
            #!/bin/bash -xe
            yum update -y
            yum remove  -y java-1.7.0-openjdk
            yum install -y java-1.8.0-openjdk
            aws s3api get-object --bucket ${RpmBucket} --key ${RpmKey} ${RpmName}
            yum install -y ${RpmName}
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --region ${AWS::Region}
  EC2AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones:
      - Fn::Select:
        - 0
        - Fn::GetAZs: !Ref AWS::Region
      - Fn::Select:
        - 1
        - Fn::GetAZs: !Ref AWS::Region
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref EC2Instances
      MinSize: 0
      MaxSize: 1
      DesiredCapacity: 1
